{"is_source_file": true, "format": "Python", "description": "Main FastAPI application file setting up models, authentication, routes, and middleware for a notes management system with JWT auth, CRUD, and search features.", "external_files": [".env", "alembic/versions (possibly for database migrations if used elsewhere)"], "external_methods": ["load_dotenv", "create_engine", "sessionmaker", "jwt.encode", "jwt.decode", "verify_password", "get_password_hash", "create_access_token", "get_user_by_username", "authenticate_user", "get_current_user"], "published": ["app", "router"], "classes": [{"name": "User", "description": "SQLAlchemy model representing users, with relationships to notes."}, {"name": "Note", "description": "SQLAlchemy model representing individual notes, linked to users."}, {"name": "UserCreate", "description": "Pydantic schema for user registration input."}, {"name": "UserRead", "description": "Pydantic schema for user data exposed externally."}, {"name": "Token", "description": "Schema for JWT token response."}, {"name": "TokenData", "description": "Schema for token decoding data."}, {"name": "NoteBase", "description": "Base schema for note creation/update."}, {"name": "NoteCreate", "description": "Schema for creating a note."}, {"name": "NoteUpdate", "description": "Schema for updating note fields."}, {"name": "NoteRead", "description": "Schema for returning note data."}], "methods": [{"name": "get_db()", "description": "Function to provide database session.", "scope": "", "scopeKind": ""}, {"name": "verify_password(plain_password, hashed_password)", "description": "Verify plaintext password against hashed password.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Hash a password using bcrypt.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Generate JWT token with expiration.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_username(db: Session, username: str)", "description": "Fetch user by username from DB.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] authenticate_user(db: Session, username: str, password: str)", "description": "Verify user credentials.", "scope": "", "scopeKind": ""}, {"name": "User get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Dependency to retrieve authenticated user from JWT.", "scope": "", "scopeKind": ""}, {"name": "create_note(note: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "generic_exception_handler(request: Request, exc: Exception)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_check()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "http_exception_handler(request: Request, exc: HTTPException)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_notes( q: Optional[str] = None, skip: int = 0, limit: int = 30, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "read_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "read_users_me(current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "register_user(user: UserCreate, db: Session = Depends(get_db))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_note(note_id: int, note: NoteUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["load_dotenv()", "create_engine()", "sessionmaker()", "jwt.encode()", "jwt.decode()", "verify_password()", "get_password_hash()", "create_access_token()", "get_user_by_username()", "authenticate_user()", "Base.metadata.create_all()"], "search-terms": ["FastAPI core app setup", "JWT authentication", "SQLAlchemy models for User and Note", "Notes CRUD endpoints", "OAuth2PasswordBearer", "using environment variables for config"], "state": 2, "file_id": 7, "knowledge_revision": 23, "git_revision": "b1a91a234f1a94b54c101877722647a9e9a19c54", "revision_history": [{"18": "7924856c02ccff5eb855537e2c6c75c09af8a2f7"}, {"20": "7924856c02ccff5eb855537e2c6c75c09af8a2f7"}, {"23": "b1a91a234f1a94b54c101877722647a9e9a19c54"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "NoteRead", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "UserRead", "scopeKind": "class"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^DATABASE_URL = os.environ.get(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class Note(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteBase", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteRead", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class NoteRead(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^SECRET_KEY = os.environ.get(\"SECRET_KEY\", \"super-secret-key\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^SessionLocal = sessionmaker(bind=engine, autoflush=False)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenData", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class TokenData(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class User(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class UserCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserRead", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^class UserRead(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"notes\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def authenticate_user(db: Session, username: str, password: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, username: str, password: str)"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    content = Column(Text, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., max_length=10000)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def create_note(note: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(ge/", "language": "Python", "kind": "function", "signature": "(note: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    created_at = Column(DateTime, default=datetime.utcnow)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    created_at = Column(DateTime, default=datetime.utcnow)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def delete_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_cu/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False})$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "NoteRead.Config", "scopeKind": "class"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "UserRead.Config", "scopeKind": "class"}, {"_type": "tag", "name": "generic_exception_handler", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^async def generic_exception_handler(request: Request, exc: Exception):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^async def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)) -/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "get_user_by_username", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def get_user_by_username(db: Session, username: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, username: str)"}, {"_type": "tag", "name": "hashed_password", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    hashed_password = Column(String)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^async def http_exception_handler(request: Request, exc: HTTPException):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: HTTPException)"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( q: Optional[str] = None, skip: int = 0, limit: int = 30, db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "login_for_access_token", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depen/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    notes = relationship(\"Note\", back_populates=\"owner\", cascade=\"all, delete-orphan\")$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "owner", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    owner = relationship(\"User\", back_populates=\"notes\")$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    owner_id = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"))$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"Password\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "read_note", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def read_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_curr/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "read_users_me", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def read_users_me(current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def register_user(user: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    title = Column(String, index=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., max_length=100)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def update_note(note_id: int, note: NoteUpdate, db: Session = Depends(get_db), current_user: Use/", "language": "Python", "kind": "function", "signature": "(note_id: int, note: NoteUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    updated_at = Column(DateTime, default=datetime.utcnow)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    username = Column(String, unique=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    username: Optional[str] = None$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "TokenData", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^    username: str = Field(..., min_length=3, max_length=32, description=\"Unique username\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-management-system-a91bc714/notes_backend/src/api/main.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "b1c1eb0b99c666d77fe9320a16341456", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = os.environ.get(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.environ.get(\"SECRET_KEY\", \"super-secret-key\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(bind=engine, autoflush=False)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"notes\"", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content = Column(Text, nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = Column(DateTime, default=datetime.utcnow)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False})", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "from_attributes = True", "scope": "NoteRead.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "hashed_password = Column(String)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "notes = relationship(\"Note\", back_populates=\"owner\", cascade=\"all, delete-orphan\")", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "owner = relationship(\"User\", back_populates=\"notes\")", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "owner_id = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"))", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "title = Column(String, index=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = Column(DateTime, default=datetime.utcnow)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "username = Column(String, unique=True, index=True)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] username", "scope": "TokenData", "scopeKind": "class", "description": "unavailable"}, {"name": "str username", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}]}